version: '3.8'

services:
  # 聊天室应用
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - GIN_MODE=release
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=chatroom
      - DB_PASSWORD=chatroom_password
      - DB_DATABASE=chatroom
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=your-production-secret-key-change-this
      - JWT_EXPIRE_TIME=24
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - chatroom-network

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatroom
      POSTGRES_USER: chatroom
      POSTGRES_PASSWORD: chatroom_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - chatroom-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - chatroom-network

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - chatroom-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  chatroom-network:
    driver: bridge
